div(class='row example-container')
	h2 Parallel
	p This is the implementation of 
		a(href='https://raw.githubusercontent.com/adambom/parallel.js/master/lib/parallel.js') https://github.com/adambom/parallel.js

	h2 Overview
	p Parallel.js is a library for multi-core processing in javascript. It gives us high-level access to multicore processing in JavaScript.

	h2 Initialization
	p Insert an array of integers. (recommended < 45, to avoid stack overflow.)
	br
	div(class='row')
		div(class='col-md-12')
			div(class='input-group')
				span(class='input-group-addon') int
				input(type='text', class='form-control', placeholder='Insert array of numbers, separated by comma', ng-model='form.form1')
			br

	div(class='row')
		div(class='col-md-6')
			button(class='btn btn-primary ng-class:{disabled:!form.form1}', ng-click='inputArray()') Insert to array
			button(class='btn btn-danger', ng-click='resetArray()') Reset array
			br
		div(class='col-md-6')
			div(class='well well-sm color-well-text', ng-show='data.array1')
				p Your array is {{data.array1}}
	br

	p.example1
		h2 Example 1 <small class='color-faded'> - Fibonacci </small>
	p We will try to find the n-th Fibonacci number, where n is the element inside your array.
	p First we make a Parallel variable from your array above. If you haven't inserted them, do so now.
	p(class='well well-sm color-well-text') Parallel operations change the data inside the variable, so check this out again later to see the mutated data.
	br
	button(class='btn btn-primary ng-class:{disabled:data.array1==null};', ng-click='createParallel()') Create parallel variable
	br
	br
	div(ng-show='data.parallel.p', class='well well-sm color-well-text')
		p Parallel variable is p, which contains the data: {{data.parallel.p}}
		p Maximum workers: {{strings.p.options.maxWorkers}}
	br
	br
	h3 Fibonacci
	button(class='btn btn-primary ng-class:{disabled:data.parallel.p==null};', ng-click='countFibo()') Fibonacci!

	p
		span(ng-bind='strings.res1')
	p
		span(ng-bind='strings.res2')
	p
		span(ng-bind='strings.res3')
	p
		span(ng-bind='strings.res4')
	//- p
	//- 	span(ng-bind='data.parallel.p')
	//- p {{strings.res4}}